# -*- coding: utf-8 -*-
from threading import Timer
from pynput import keyboard, mouse
from pynput._util import darwin
from PySide2.QtCore import QObject, Signal
from time import sleep
import os


def replace_dict_key_values(src_dict):
    result = {}
    for key in src_dict:
        val = src_dict[key]
        result[val] = key
    return result


@darwin.contextlib.contextmanager
def us_keycode_context():
    keyboard_type = darwin.CarbonExtra.LMGetKbdType()
    layout_data = b'\x02\x10\x00\x01\xec\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x11\x00\x00\x00\xf4\x00\x00\x00l\x01\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\x12\x00\x00\x00\x12\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\x15\x00\x00\x00\x17\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\x1e\x00\x00\x00\x1e\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\xc2\x00\x00\x00\xc2\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\xc5\x00\x00\x00\xc5\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\xc8\x00\x00\x00\xc9\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\xce\x00\x00\x00\xcf\x00\x00\x00\xf4\x00\x00\x00\x84\t\x00\x00\x9c\x11\x00\x00d\x13\x00\x00\x00\x00\x00\x00\x01 \x00\x00\x02\x00\x00\x00\x010\x07\x00p\x00\x00\x00\x00\x00\x01\x00\x02\x00\x01\x00\x03\x06\x04\x04\x05\x06\x04\x04\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x01\x00\x01\x00\x01\x00\x01\x00\x04\x04\x04\x04\x04\x04\x04\x04\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x03\x06\x04\x04\x05\x06\x04\x04\x03\x06\x04\x04\x05\x06\x04\x04\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x07\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x04\x01@\x7f\x00\x08\x00\x00\x00\x94\x01\x00\x00\x92\x02\x00\x00\x90\x03\x00\x00\x8e\x04\x00\x00\x8c\x05\x00\x00\x8a\x06\x00\x00\x88\x07\x00\x00\x86\x08\x00\x00\r@s\x00d\x00f\x00h\x00g\x00z\x00x\x00c\x00v\x00\xa7\x00b\x00q\x00w\x00\x0e@r\x00\x13@t\x001\x002\x003\x004\x006\x005\x00=\x009\x007\x00-\x008\x000\x00]\x00\x11@\x12@[\x00\x0f@p\x00\r\x00l\x00j\x00\'\x00k\x00;\x00\\\x00,\x00/\x00\x10@m\x00.\x00\t\x00\x05@`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x06@S\x00D\x00F\x00H\x00G\x00Z\x00X\x00C\x00V\x00\xb1\x00B\x00Q\x00W\x00\x07@R\x00\x0c@T\x00!\x00@\x00#\x00$\x00^\x00%\x00+\x00(\x00&\x00_\x00*\x00)\x00}\x00\n@\x0b@{\x00\x08@P\x00\r\x00L\x00J\x00"\x00K\x00:\x00|\x00<\x00?\x00\t@M\x00>\x00\t\x00\x05@~\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00*\x00*\x00\xff\xff+\x00+\x00\x1b\x00=\x00\xff\xff\xff\xff/\x00\x03\x00/\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x06@S\x00D\x00F\x00H\x00G\x00Z\x00X\x00C\x00V\x00\xa7\x00B\x00Q\x00W\x00\x07@R\x00\x0c@T\x001\x002\x003\x004\x006\x005\x00=\x009\x007\x00-\x008\x000\x00]\x00\n@\x0b@[\x00\x08@P\x00\r\x00L\x00J\x00\'\x00K\x00;\x00\\\x00,\x00/\x00\t@M\x00.\x00\t\x00\x05@`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xe5\x00\xdf\x00\x02"\x92\x01\xd9\x02\xa9\x00\xa9\x03H"\xe7\x00\x1a"\xa7\x00+"S\x01\x11"\x00@\xae\x00\xa5\x00  \xa1\x00"!\xa3\x00\xa2\x00\xa7\x00\x1e"`"\xaa\x00\xb6\x00\x13 " \xba\x00\x18 \xf8\x00\x03@\x1c \x02@\xc0\x03\r\x00\xac\x00\x06"\xe6\x00\xda\x02& \xab\x00d"\xf7\x00\x04@\xb5\x00e"\t\x00\xa0\x00\x01@\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xc5\x00\xcd\x00\xce\x00\xcf\x00\xd3\x00\xdd\x02\xb8\x00\xdb\x02\xc7\x00\xca%\xb1\x001\x01R\x01\x1e \xb4\x000 \xc1\x00\xc7\x02D \xac 9 : \x02\xfb\x01\xfb\xb1\x00\xb7\x00! \x14 \xb0\x00\x1a \x19 \xd8\x00\xa8\x00\x1d \xc6\x02\x0f"\r\x00\xd2\x00\xd4\x00\xc6\x00\xff\xf8\xda\x00\xbb\x00\xaf\x00\xbf\x00\xdc\x02\xc2\x00\xd8\x02\t\x00\xa0\x00`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00*\x00*\x00\xff\xff+\x00+\x00\x1b\x00=\x00\xff\xff\xff\xff/\x00\x03\x00/\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xc5\x00\xcd\x00\xce\x00\xcf\x00\xd3\x00\xa9\x00\xa9\x03H"\xc7\x00\x1a"\xa7\x001\x01R\x01\x11"\xb4\x00\xae\x00\xc1\x00  \xa1\x00"!\xa3\x00\xa2\x00\xa7\x00\x1e"`"\xaa\x00\xb6\x00\x13 " \xba\x00\x18 \xd8\x00\xa8\x00\x1c \xc6\x02\x0f"\r\x00\xd2\x00\xd4\x00\xc6\x00\xda\x02& \xab\x00d"\xf7\x00\xdc\x02\xc2\x00e"\t\x00\xa0\x00`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xe5\x00\xdf\x00\x02"\x92\x01\xd9\x02\xa9\x00\xa9\x03H"\xe7\x00\x1a"\xa7\x00+"S\x01\x11"\xb4\x00\xae\x00\xa5\x00  \xa1\x00"!\xa3\x00\xa2\x00\xa7\x00\x1e"`"\xaa\x00\xb6\x00\x13 " \xba\x00\x18 \xf8\x00\xa8\x00\x1c ^\x00\xc0\x03\r\x00\xac\x00\x06"\xe6\x00\xda\x02& \xab\x00d"\xf7\x00~\x00\xb5\x00e"\t\x00\xa0\x00`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x01\x00\x13\x00\x04\x00\x06\x00\x08\x00\x07\x00\x1a\x00\x18\x00\x03\x00\x16\x000\x00\x02\x00\x11\x00\x17\x00\x05\x00\x12\x00\x19\x00\x14\x001\x002\x003\x004\x006\x005\x00=\x009\x007\x00\x1f\x008\x000\x00\x1d\x00\x0f\x00\x15\x00\x1b\x00\t\x00\x10\x00\r\x00\x0c\x00\n\x00\'\x00\x0b\x00;\x00\x1c\x00,\x00/\x00\x0e\x00\r\x00.\x00\t\x00\x05@`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xff\xff\xff\xff\xff\xff\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x01@\x7f\x00\x08\x00\x00\x00\xac\t\x00\x00\xaa\n\x00\x00\xa8\x0b\x00\x00\xa6\x0c\x00\x00\xa4\r\x00\x00\xa2\x0e\x00\x00\xa0\x0f\x00\x00\x9e\x10\x00\x00\r@s\x00d\x00f\x00h\x00g\x00z\x00x\x00c\x00v\x00\xa7\x00b\x00q\x00w\x00\x0e@r\x00\x13@t\x001\x002\x003\x004\x006\x005\x00^\x009\x007\x00-\x008\x000\x00[\x00\x11@\x12@@\x00\x0f@p\x00\r\x00l\x00j\x00:\x00k\x00;\x00]\x00,\x00/\x00\x10@m\x00.\x00\t\x00\x05@`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xa5\x00_\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x06@S\x00D\x00F\x00H\x00G\x00Z\x00X\x00C\x00V\x00\xb1\x00B\x00Q\x00W\x00\x07@R\x00\x0c@T\x00!\x00"\x00#\x00$\x00&\x00%\x00~\x00)\x00\'\x00=\x00(\x000\x00{\x00\n@\x0b@`\x00\x08@P\x00\r\x00L\x00J\x00*\x00K\x00+\x00}\x00<\x00?\x00\t@M\x00>\x00\t\x00\x05@~\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00*\x00*\x00\xff\xff+\x00+\x00\x1b\x00=\x00\xff\xff\xff\xff/\x00\x03\x00/\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00|\x00_\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x06@S\x00D\x00F\x00H\x00G\x00Z\x00X\x00C\x00V\x00\xa7\x00B\x00Q\x00W\x00\x07@R\x00\x0c@T\x001\x002\x003\x004\x006\x005\x00^\x009\x007\x00-\x008\x000\x00[\x00\n@\x0b@@\x00\x08@P\x00\r\x00L\x00J\x00:\x00K\x00;\x00]\x00,\x00/\x00\t@M\x00.\x00\t\x00\x05@`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\xa5\x00_\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xe5\x00\xdf\x00\x02"\x92\x01\xd9\x02\xa9\x00\xa9\x03H"\xe7\x00\x1a"\xa7\x00+"S\x01\x11"\x00@\xae\x00\xa5\x00  \xa1\x00"!\xa3\x00\xa2\x00\xa7\x00\x1e"`"\xaa\x00\xb6\x00\x13 " \xba\x00\x18 \xf8\x00\x03@\x1c \x02@\xc0\x03\r\x00\xac\x00\x06"\xe6\x00\xda\x02& \xab\x00d"\xf7\x00\x04@\xb5\x00e"\t\x00\xa0\x00\x01@\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\\\x00\x01@,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xc5\x00\xcd\x00\xce\x00\xcf\x00\xd3\x00\xdd\x02\xb8\x00\xdb\x02\xc7\x00\xca%\xb1\x001\x01R\x01\x1e \xb4\x000 \xc1\x00\xc7\x02D \xac 9 : \x02\xfb\x01\xfb\xb1\x00\xb7\x00! \x14 \xb0\x00\x1a \x19 \xd8\x00\xa8\x00\x1d \xc6\x02\x0f"\r\x00\xd2\x00\xd4\x00\xc6\x00\xff\xf8\xda\x00\xbb\x00\xaf\x00\xbf\x00\xdc\x02\xc2\x00\xd8\x02\t\x00\xa0\x00`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00*\x00*\x00\xff\xff+\x00+\x00\x1b\x00=\x00\xff\xff\xff\xff/\x00\x03\x00/\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00|\x00`\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xc5\x00\xcd\x00\xce\x00\xcf\x00\xd3\x00\xa9\x00\xa9\x03H"\xc7\x00\x1a"\xa7\x001\x01R\x01\x11"\xb4\x00\xae\x00\xc1\x00  \xa1\x00"!\xa3\x00\xa2\x00\xa7\x00\x1e"`"\xaa\x00\xb6\x00\x13 " \xba\x00\x18 \xd8\x00\xa8\x00\x1c \xc6\x02\x0f"\r\x00\xd2\x00\xd4\x00\xc6\x00\xda\x02& \xab\x00d"\xf7\x00\xdc\x02\xc2\x00e"\t\x00\xa0\x00`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\\\x00`\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\xe5\x00\xdf\x00\x02"\x92\x01\xd9\x02\xa9\x00\xa9\x03H"\xe7\x00\x1a"\xa7\x00+"S\x01\x11"\xb4\x00\xae\x00\xa5\x00  \xa1\x00"!\xa3\x00\xa2\x00\xa7\x00\x1e"`"\xaa\x00\xb6\x00\x13 " \xba\x00\x18 \xf8\x00\xa8\x00\x1c ^\x00\xc0\x03\r\x00\xac\x00\x06"\xe6\x00\xda\x02& \xab\x00d"\xf7\x00~\x00\xb5\x00e"\t\x00\xa0\x00`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00\\\x00_\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x01\x00\x13\x00\x04\x00\x06\x00\x08\x00\x07\x00\x1a\x00\x18\x00\x03\x00\x16\x000\x00\x02\x00\x11\x00\x17\x00\x05\x00\x12\x00\x19\x00\x14\x001\x002\x003\x004\x006\x005\x00=\x009\x007\x00\x1f\x008\x000\x00\x1d\x00\x0f\x00\x15\x00\x1b\x00\t\x00\x10\x00\r\x00\x0c\x00\n\x00\'\x00\x0b\x00;\x00\x1c\x00,\x00/\x00\x0e\x00\r\x00.\x00\t\x00\x05@`\x00\x08\x00\x03\x00\x1b\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff.\x00\x1d\x00*\x00\xff\xff+\x00\x1c\x00\x1b\x00\x1f\x00\xff\xff\xff\xff/\x00\x03\x00\x1e\x00-\x00\xff\xff\xff\xff=\x000\x001\x002\x003\x004\x005\x006\x007\x00\xff\xff8\x009\x00|\x00_\x00,\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05@\x10\x00\x05@\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x10\x00\x05\x00\x01\x00\x0b\x00\x7f\x00\x10\x00\x04\x00\x10\x00\x0c\x00\x10\x00\x1c\x00\x1d\x00\x1f\x00\x1e\x00\x01P\x14\x00\xf0\x11\x00\x00\xf8\x11\x00\x00\x00\x12\x00\x00\x08\x12\x00\x00\x10\x12\x00\x00\x18\x12\x00\x004\x12\x00\x00P\x12\x00\x00h\x12\x00\x00\x80\x12\x00\x00\x8c\x12\x00\x00\xa8\x12\x00\x00\xc0\x12\x00\x00\xcc\x12\x00\x00\xe8\x12\x00\x00\x00\x13\x00\x00\x18\x13\x00\x00$\x13\x00\x00@\x13\x00\x00X\x13\x00\x00\xff\xff\x01\x00\x00\x00\x00\x00\xff\xff\x02\x00\x00\x00\x00\x00\xff\xff\x03\x00\x00\x00\x00\x00\xff\xff\x04\x00\x00\x00\x00\x00\xff\xff\x05\x00\x00\x00\x00\x00 \x00\x00\x00\x05\x00\x01\x00\x01\x00\xb4\x00\x02\x00`\x00\x03\x00\xc6\x02\x04\x00\xa8\x00\x05\x00\xdc\x02A\x00\x00\x00\x05\x00\x01\x00\x01\x00\xc1\x00\x02\x00\xc0\x00\x03\x00\xc2\x00\x04\x00\xc4\x00\x05\x00\xc3\x00E\x00\x00\x00\x04\x00\x01\x00\x01\x00\xc9\x00\x02\x00\xc8\x00\x03\x00\xca\x00\x04\x00\xcb\x00I\x00\x00\x00\x04\x00\x01\x00\x01\x00\xcd\x00\x02\x00\xcc\x00\x03\x00\xce\x00\x04\x00\xcf\x00N\x00\x00\x00\x01\x00\x01\x00\x05\x00\xd1\x00O\x00\x00\x00\x05\x00\x01\x00\x01\x00\xd3\x00\x02\x00\xd2\x00\x03\x00\xd4\x00\x04\x00\xd6\x00\x05\x00\xd5\x00U\x00\x00\x00\x04\x00\x01\x00\x01\x00\xda\x00\x02\x00\xd9\x00\x03\x00\xdb\x00\x04\x00\xdc\x00Y\x00\x00\x00\x01\x00\x01\x00\x04\x00x\x01a\x00\x00\x00\x05\x00\x01\x00\x01\x00\xe1\x00\x02\x00\xe0\x00\x03\x00\xe2\x00\x04\x00\xe4\x00\x05\x00\xe3\x00e\x00\x00\x00\x04\x00\x01\x00\x01\x00\xe9\x00\x02\x00\xe8\x00\x03\x00\xea\x00\x04\x00\xeb\x00i\x00\x00\x00\x04\x00\x01\x00\x01\x00\xed\x00\x02\x00\xec\x00\x03\x00\xee\x00\x04\x00\xef\x00n\x00\x00\x00\x01\x00\x01\x00\x05\x00\xf1\x00o\x00\x00\x00\x05\x00\x01\x00\x01\x00\xf3\x00\x02\x00\xf2\x00\x03\x00\xf4\x00\x04\x00\xf6\x00\x05\x00\xf5\x00u\x00\x00\x00\x04\x00\x01\x00\x01\x00\xfa\x00\x02\x00\xf9\x00\x03\x00\xfb\x00\x04\x00\xfc\x00y\x00\x00\x00\x01\x00\x01\x00\x04\x00\xff\x00\x01`\x05\x00\xb4\x00`\x00\xc6\x02\xa8\x00\xdc\x02\x00\x00'
    yield (keyboard_type, layout_data)


def get_us_unicode_to_keycode_map():
    """Returns a mapping from unicode strings to virtual key codes.

    :return: a dict mapping key codes to strings
    """
    with us_keycode_context() as context:
        return replace_dict_key_values({
            darwin.keycode_to_string(context, keycode): keycode
            for keycode in range(128)})


class KeyMonitor(QObject):
    comb_found = Signal(enumerate)

    def __clear_released(self):
        self.__col_pressed = 0
        self.__pressed.clear()
        # print('released combs was cleared')

    def __sticky_keys_check_stick(self):
        if not self.__all_keys_was_released_in_interval:
            self.__clear_released()

    def start_listen(self):
        self.__listener.start()

    def stop_listen(self):
        self.__listener.stop()

    def __new__(cls):  # Singleton
        if not hasattr(cls, 'instance'):
            cls.instance = super(KeyMonitor, cls).__new__(cls)
            cls.instance.__initialized = False
        return cls.instance

    def __init__(self, parent=None):
        if not self.__initialized:
            super(KeyMonitor, self).__init__()

            self.__listener = ''
            self.__search_combs = []
            self.__pressed = set()
            self.__col_pressed = 0
            self.__is_get_comb = False
            self.__max_key_count_comb = 1
            self._max_combination = set()
            self.__last_comb_found = set()
            self.__all_keys_was_released_in_interval = False
            self.__timer_clear_released = Timer(3, self.__sticky_keys_check_stick)

            # Заполняем список кодов
            self.__keys_map = get_us_unicode_to_keycode_map().copy()

            self.__listener = keyboard.Listener(
                on_press=self.__on_press,
                on_release=self.__on_release
            )
            self.start_listen()

            self.__initialized = True


    def start_get_comb(self):
        self._max_combination = set()
        self.__max_key_count_comb = 1
        self.__is_get_comb = True

    def stop_get_comb(self):
        self.__is_get_comb = False

    def __get_key_code(self, key):
        str_key = str(key)
        # print('str_key = %s' % str_key)
        str_by_vk_key = str_key
        try:
            str_by_vk_key = self.__keys_map[key.vk]
        except:
            pass
        # print('__keys_map[key.vk] = %s' % str_by_vk_key)
        key_str_val = str_by_vk_key if str_key.find('Key') < 0 else str_key
        # print('key_str_val = %s' % key_str_val)
        return key_str_val

    def __on_press(self, key):
        key_code = self.__get_key_code(key)

        self.__col_pressed += 1
        self.__pressed.add(key_code)

        # print()
        # print('press key = %s' % key_code)
        # print('pressed = %s' % self.__pressed)
        # print('col pressed = %s' % self.__col_pressed)
        # print()

        if not self.__timer_clear_released.is_alive():
            self.__all_keys_was_released_in_interval = False
            self.__timer_clear_released = Timer(3, self.__sticky_keys_check_stick)
            self.__timer_clear_released.start()

        if self.__is_get_comb:  # Начинаем получать комбинацию
            if self.__col_pressed > self.__max_key_count_comb:
                self._max_combination = self.__pressed.copy()
                self.__max_key_count_comb += 1
            else:
                if key == keyboard.Key.esc:
                    self._max_combination = None
                    self.stop_get_comb()
        else:
            if self.__col_pressed > 1:
                for search_comb in self.__search_combs:
                    if all(p in search_comb for p in self.__pressed) and all(s in self.__pressed for s in search_comb):
                        # print('Combination %s was found' % search_comb)
                        self.__last_comb_found = search_comb.copy()
                        self.comb_found.emit(self.__last_comb_found)
                        break

    def __on_release(self, key):
        key_code = self.__get_key_code(key)

        if self.__is_get_comb and self.__col_pressed > 1:  # Отпустили хоть одну клавишу и получение комбинации включено - вернем макс. комб. клавиш
            self.stop_get_comb()

        if key_code in self.__pressed:
            self.__col_pressed -= 1
            self.__pressed.remove(key_code)

        # print()
        # print('release key = %s' % key_code)
        # print('pressed = %s' % self.__pressed)
        # print('col pressed = %s' % self.__col_pressed)
        # print()

        if self.__col_pressed < 1:
            self.__all_keys_was_released_in_interval = True
            self.__col_pressed = 0
            self.__pressed.clear()
            # print('clear all keys')

    def get_set_comb_from_str(self, src_str=''):
        result = set()
        result = eval(src_str)
        return result

    def update_search_combs(self, rules_list):
        self.__search_combs.clear()
        for rule in rules_list:
            search_comb = self.get_set_comb_from_str(rule[2])
            self.__search_combs.append(search_comb)

    def get_keyboard_layout(self):
        return os.popen(
            "defaults read ~/Library/Preferences/com.apple.HIToolbox.plist AppleSelectedInputSources | "
            "egrep -w 'KeyboardLayout Name' | "
            "sed -E 's/^.+ = \"?([^\"]+)\"?;$/\\1/'").read()[:-1]

    def change_keyboard_layout(self):
        # script_text = '\n' \
        #               'tell application "System Events" to tell process "SystemUIServer"\n' \
        #               ' tell (1st menu bar item of menu bar 1 whose description is "text input") to {click, click (menu item %s of menu 1)}\n' \
        #               'end tell\n' \
        #               'delay 0.25\n' % (layout_name if layout_num < 0 else f'"{layout_name}"')
        script_text = '\n' \
                      'tell application "System Events" to keystroke space using {control down}\n' \
                      'delay 0.25\n' \
                      ''
        # print("""osascript -e '%s'""" % script_text)
        os.system("""osascript -e '%s'""" % script_text)

    def cmd_paste(self):
        layout_name = self.get_keyboard_layout()
        need_replace = (layout_name != 'ABC')
        # print('need_replace = %s' % str(need_replace))
        if need_replace:
            self.change_keyboard_layout()
        os.system("""osascript -e 'tell application "System Events" to keystroke "v" using command down'""")
        if need_replace:
            self.change_keyboard_layout()

    def cmd_tab(self):
        cont = keyboard.Controller()
        cont.press(keyboard.Key.cmd)
        cont.press(keyboard.Key.tab)
        cont.release(keyboard.Key.tab)
        cont.release(keyboard.Key.cmd)
        cont = ''

    def click_mouse_on_tray_icon_menu(self, tray_icon_x_pos, move_to_first_menu_item = False):
        cont = mouse.Controller()
        current_pos = cont.position
        cont.move(tray_icon_x_pos - current_pos[0], 0 - current_pos[1])
        sleep(0.25)
        cont.click(mouse.Button.left, 1)
        if move_to_first_menu_item:
            cont.move(0, 35)
        cont = ''

    def pos_mouse(self, x_pos, y_pos):
        cont = mouse.Controller()
        current_pos = cont.position
        cont.move(x_pos - current_pos[0], y_pos - current_pos[1])
        cont = ''

    def get_combination(self):
        self.start_get_comb()
        while self.__is_get_comb:
            pass
        return self._max_combination
